disciplined agile delivery software development core activities processes requirements design engineering construction testing debugging deployment maintenance paradigms and models agile cleanroom incremental prototyping spiral v model waterfall methodologies and frameworks asd devops dad dsdm fdd iid kanban lean sd less mdd msf psp rad rup safe scrum semat tsp up xp supporting disciplines configuration management documentation software quality assurance sqa project management user experience practices atdd bdd cco ci cd ddd pp standup tdd tools compiler debugger profiler gui designer modeling ide build automation release automation infrastructure as code testing standards and bodies of knowledge babok cmmi ieee standards iso 9001 isoiec standards pmbok swebok itil glossaries artificial intelligence computer science electrical and electronics engineering vte disciplined agile delivery dad is a process decision framework that enables simplified process decisions around incremental and iterative solution delivery dad builds on the many practices espoused by advocates of agile software development including scrum agile modeling lean software development and others the primary reference for disciplined agile delivery is the book of same name written by scott ambler and mark lines in particular dad has been identified as a means of moving beyond scrum history dad is a secondgeneration framework that strives to provide a coherent endtoend strategy for how agile solution delivery works in practice dad is a peoplefirst learningoriented hybrid agile approach to it solution delivery it has a riskvalue lifecycle is goaldriven is scalable and is enterprise aware scott ambler developed the disciplined agile development process during his time as chief methodologist for it at ibm rational summer 2006 to summer 2012 it was developed to provide a more cohesive approach to agile software development one that fills in the process gaps that are purposely ignored by scrum and one that is capable of enterpriselevel scale according to ambler many agile methodologiesincluding scrum xp am agile data kanban and morefocus on a subset of the activities required to deliver a solution from project initiation to delivery before dad was developed you needed to cobble together your own agile methodology to get the job done the dad framework was developed as a result of observing common patterns where agility was applied at scale successfully it reflects the experiences of ibm employees working in the field with various customer organizations applying agile at scale internally and from working with various business partners lifecycle goals inception phase construction phase transition phase form initial team develop common project vision align with enterprise direction explore initial scope identify initial technical strategy develop initial release plan form work environment secure funding identify risks produce potentially consumable solution address changing stakeholder needs move closer to deployable release improve quality prove architecture early ensure solution is consumable deploy solution ongoing goals fulfill project mission grow team members address risk improve team process and environment leverageenhance existing infrastructure key aspects peoplefirst the disciplined agile delivery framework identifies that people and the way they interact with each other are the primary determinant of success for a solution delivery project dad specifies a robust set of primary and secondary roles outlined in the roles section below learningoriented the dad process framework promotes the ideas that team members should collaborate closely and learn from each other that the team should invest effort to learn from their experiences and evolve their approach and that individuals should do so as well hybrid dad adopts and tailors proven strategies from existing methods such as scrum extreme programming xp agile modeling am unified process up kanban outsidein software development and agile data ad rather than taking the time to adapt one of these existing frameworks with dad all of the effort of combining relevant pieces of each technique has already been done full delivery lifecycle unlike first generation agile methods that typically focus on the construction aspects of the lifecycle the dad lifecycle addresses the entire project from the point of initiation all the way to production and postdelivery production activities process goal driven the dad framework approach is goaldriven rather than prescriptive compared to scrum which prescribes that all work is managed via a product backlog queue dad suggests choosing a workprioritization strategy based on whatever factors are most important to project stakeholders in a dad approach strategies could be driven by several factors business value risk due date dependencies or any combination thereof dad describes the tradeoffs associated with each strategy and discusses the viability of each solution focused disciplined agile development matures focus from simply producing software to providing consumable solutions that provide real business value to stakeholders while software is clearly an important part of the deliverable being solution focused means taking a holistic view of the overall problem this can lead to suggested updates in hardware businessorganizational processes and overall organizational structures riskvalue lifecycle the dad lifecycle is risk and value driven it extends scrums valuedriven lifecycle which produces potentially shippable software each sprintiteration so that it explicitly includes lightweight milestones such as ensuring stakeholder consensus as to the scope of the project early in the lifecycle proving the architecture with working code early in the lifecycle ensuring sufficient functionality exists before transition and ensuring production readiness before actual release of the solution enterprise aware enterprise awareness is a crucial philosophy of the dad framework dad teams work within an organizations enterprise ecosystem just like any other team ideally a dad team will leverage existing resources in order to reduce overall delivery time and cost and can work in parallel to other teams in the organization an important aspect of enterprise awareness is that dad has explicit devops practices and strategies built right into the framework roles primary roles these five primary roles in the dad framework are typically found regardless of scale stakeholder someone who is materially impacted by the outcome of the solution more than just an end user this is anyone potentially affected by the development and deployment of a software project product owner the person on the team who speaks as the one voice of the customer representing the needs of the stakeholder community to the agile delivery team team member the team member focuses on producing the actual solution for stakeholders including but not limited to testing analysis architecture design programming planning and estimation team lead the team lead is the agile coach responsible for facilitating communication optimizing processes and ensuring the team has the resources it needs and is free of obstacles architecture owner makes the architecture decisions for the team and facilitates the creation and evolution of the overall solution design secondary roles these secondary roles are introduced sometimes on a temporary basis to address scaling issues specialist although most agile team members are generalizing specialists sometimes other specialists are required depending on the needs of the project domain expert while the product owner represents a wide range of stakeholders a domain expert is sometimes required for complex domains where a more nuanced understanding is required technical expert in cases where a particularly difficult problem is encountered a technical expert can be brought in as needed these could be build masters agile database administrators user experience ux designers or security experts independent tester although the majority of testing is done by the dad team members in cases with complex domains or technology an independent testing team can be brought in to work in parallel to validate the work integrator for complex technical solutions at scale an integrator or multiple integrators can be used to build the entire system from its various subsystems brown alan 2012 enterprise software delivery bringing agility and efficiency to the global software supply chain isbn9780321803016 royce walker 2013 agility at scale economic governance measured improvement and disciplined agile delivery supporting governance in disciplined agile delivery using noninvasive measurement and process mining november 2013 cutter it journal astromiskis janes sillitti succi 10 principles for success in distributed agile delivery november 2013 cutter it journal bavani vtesoftware engineeringfields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc modelsdevelopmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml softwareengineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons 