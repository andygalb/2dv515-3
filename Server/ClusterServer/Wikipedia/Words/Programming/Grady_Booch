grady booch grady booch born february 27 1955 is an american software engineer best known for developing the unified modeling language uml with ivar jacobson and james rumbaugh he is recognized internationally for his innovative work in software architecture software engineering and collaborative development environments education booch earned his bachelors degree in 1977 from the united states air force academy and a masters degree in electrical engineering in 1979 from the university of california santa barbara career and research booch served as chief scientist of rational software corporation since its founding in 1981 and through its acquisition by ibm in 2003 where he kept working until march 2008 afterwards he became chief scientist software engineering in ibm research and series editor for benjamin cummings booch has devoted his lifes work to improving the art and the science of software development in the 1980s he wrote one of the more popular books on programming in ada he is best known for developing the unified modeling language with ivar jacobson and james rumbaugh in the 1990s ibm 1130 booch got his first exposure to programming on an ibm 1130 i pounded the doors at the local ibm sales office until a salesman took pity on me after we chatted for a while he handed me a fortran im sure he gave it to me thinking ill never hear from this kid again i returned the following week saying this is really cool ive read the whole thing and have written a small program where can i find a computer the fellow to my delight found me programming time on an ibm 1130 on weekends and lateevening hours that was my first programming experience and i must thank that anonymous ibm salesman for launching my career thank you ibm booch method class diagram booch developed the booch method of software development which he presents in his 199194 book object oriented analysis and design he advises adding more classes to simplify complex code the booch method is a technique used in software engineering it is an object modeling language and methodology that was widely used in objectoriented analysis and design it was developed by booch while at rational software the notation aspect of the booch method has now been superseded by the unified modeling language uml which features graphical elements from the booch method along with elements from the objectmodeling technique omt and objectoriented software engineering oose methodological aspects of the booch method have been incorporated into several methodologies and processes the primary such methodology being the rational unified process rup design patterns booch is also an advocate of design patterns for instance he wrote the foreword to design patterns an early and highly influential book in the field ibm research almaden he now is part of ibm research almaden serving as chief scientist for software engineering where he continues his work on the handbook of software architecture and also leads several projects in software engineering that are beyond the constraints of immediate product horizons grady continues to engage with customers working on real problems and maintains deep relationships with academia and other research organizations around the world grady is one of the original authors of the unified modeling language uml and was also one of the original developers of several of rationals products grady has served as architect and architectural mentor for numerous complex softwareintensive systems around the world in just about every domain imaginable publications grady booch published several articles and books a selection software engineering with ada object solutions managing the objectoriented project the unified software development process with ivar jacobson and james rumbaugh the complete uml training course with james rumbaugh and ivar jacobson the unified modeling language reference manual second edition with james rumbaugh and ivar jacobson the unified modeling language user guide second edition with james rumbaugh and ivar jacobson objectoriented analysis and design with applications awards and honors booch at the ieee computer societys first techignite conference in 1995 he was inducted as a fellow of the association for computing machinery he gave the turing lecture in 2007 media related to grady booch at wikimedia commons quotations related to grady booch at wikiquote vtesoftware engineeringfields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc modelsdevelopmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml softwareengineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons vteunified modeling languageactors organizations object management group uml partners persons grady booch ivar jacobson james rumbaugh conceptsobject oriented objectoriented programming objectoriented analysis and design objectoriented modeling structure actor attribute artifact class component interface object package profile diagram behavior activity event message method state use case relationships association composition dependency generalization or inheritance extensibility profile stereotype other multiplicity diagramsstructure class component composite structure deployment object package behaviour activity state machine use case interaction communications sequence interaction overview timing derived languages systems modeling language sysml uml exchange format uxf xml metadata interchange xmi executable uml xuml other topics glossary of uml terms rational unified process list of unified modeling language tools object modeling in color authority control worldcat identities acm dl 81100557878 bibsys 90193367 bne xx1020531 bnf cb12081154j data dblp bgradybooch gnd 133871452 isni 0000 0001 1755 0736 lccn n82067109 lnb 000007973 ndl 00512142 sudoc 029118808 viaf 30231529 