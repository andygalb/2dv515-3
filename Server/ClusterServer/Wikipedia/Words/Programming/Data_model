data model a data model or datamodel is an abstract model that organizes elements of data and standardizes how they relate to one another and to properties of the real world entities for instance a data model may specify that the data element representing a car be composed of a number of other elements which in turn represent the color and size of the car and define its owner the term data model is used in two distinct but closely related senses sometimes it refers to an abstract formalization of the objects and relationships found in a particular application domain for example the customers products and orders found in a manufacturing organization at other times it refers to a set of concepts used in defining such formalizations for example concepts such as entities attributes relations or tables so the data model of a banking application may be defined using the entityrelationship data model this article uses the term in both senses overview of data modeling context data model is based on data data relationship data semantic and data constraint a data model provides the details of information to be stored and is of primary use when the final product is the generation of computer software code for an application or the preparation of a functional specification to aid a computer software makeorbuy decision the figure is an example of the interaction between process and data models a data model explicitly determines the structure of data data models are specified in a data modeling notation which is often graphical in form a data model can sometimes be referred to as a data structure especially in the context of programming languages data models are often complemented by function models especially in the context of enterprise models overview managing large quantities of structured and unstructured data is a primary function of information systems data models describe the structure manipulation and integrity aspects of the data stored in data management systems such as relational databases they typically do not describe unstructured data such as word processing documents email messages pictures digital audio and video the role of data models how data models deliver benefit the main aim of data models is to support the development of information systems by providing the definition and format of data according to west and fowler 1999 if this is done consistently across systems then compatibility of data can be achieved if the same data structures are used to store and access data then different applications can share data the results of this are indicated above however systems and interfaces often cost more than they should to build operate and maintain they may also constrain the business rather than support it a major cause is that the quality of the data models implemented in systems and interfaces is poor business rules specific to how things are done in a particular place are often fixed in the structure of a data model this means that small changes in the way business is conducted lead to large changes in computer systems and interfaces entity types are often not identified or incorrectly identified this can lead to replication of data data structure and functionality together with the attendant costs of that duplication in development and maintenance data models for different systems are arbitrarily different the result of this is that complex interfaces are required between systems that share data these interfaces can account for between 2570 of the cost of current systems data cannot be shared electronically with customers and suppliers because the structure and meaning of data has not been standardized for example engineering design data and drawings for process plant are still sometimes exchanged on paper the reason for these problems is a lack of standards that will ensure that data models will both meet business needs and be consistent a data model explicitly determines the structure of data typical applications of data models include database models design of information systems and enabling exchange of data usually data models are specified in a data modeling language three perspectives the ansisparc three level architecture this shows that a data model can be an external model or view a conceptual model or a physical model this is not the only way to look at data models but it is a useful way particularly when comparing models a data model instance may be one of three kinds according to ansi in 1975 conceptual data model describes the semantics of a domain being the scope of the model for example it may be a model of the interest area of an organization or industry this consists of entity classes representing kinds of things of significance in the domain and relationship assertions about associations between pairs of entity classes a conceptual schema specifies the kinds of facts or propositions that can be expressed using the model in that sense it defines the allowed expressions in an artificial language with a scope that is limited by the scope of the model logical data model describes the semantics as represented by a particular data manipulation technology this consists of descriptions of tables and columns object oriented classes and xml tags among other things physical data model describes the physical means by which data are stored this is concerned with partitions cpus tablespaces and the like the significance of this approach according to ansi is that it allows the three perspectives to be relatively independent of each other storage technology can change without affecting either the logical or the conceptual model the tablecolumn structure can change without necessarily affecting the conceptual model in each case of course the structures must remain consistent with the other model the tablecolumn structure may be different from a direct translation of the entity classes and attributes but it must ultimately carry out the objectives of the conceptual entity class structure early phases of many software development projects emphasize the design of a conceptual data model such a design can be detailed into a logical data model in later stages this model may be translated into physical data model however it is also possible to implement a conceptual model directly history one of the earliest pioneering works in modelling information systems was done by young and kent 1958 in the 1960s data modeling gained more significance with the initiation of the management information system mis concept according to leondes 2002 during that time the information system provided the data and information for management purposes the first generation database system called integrated data store ids was designed by charles bachman at general electric two famous database models the network data model and the hierarchical data model were proposed during this period of time in the 1970s entity relationship modeling emerged as a new type of conceptual data modeling originally proposed in 1976 by peter chen entity relationship models were being used in the first stage of information system design during the requirements analysis to describe information needs or the type of information that is to be stored in a database this technique can describe any ontology ie an overview and classification of concepts and their relationships for a certain area of interest in the 1970s gm nijssen developed natural language information analysis method niam method and developed this in the 1980s in cooperation with terry halpin into objectrole modeling orm however it was terry halpins 1989 phd thesis that created the formal foundation on which objectrole modeling is based bill kent in his 1978 book data and reality compared a data model to a map of a territory emphasizing that in the real world highways are not painted red rivers dont have county lines running down the middle and you cant see contour lines on a mountain in contrast to other researchers who tried to create models that were mathematically clean and elegant kent emphasized the essential messiness of the real world and the task of the data modeller to create order out of chaos without excessively distorting the truth in the 1980s according to jan l harrington 2000 the development of the objectoriented paradigm brought about a fundamental change in the way we look at data and the procedures that operate on data traditionally data and procedures have been stored separately the data and their relationship in a database the procedures in an application program object orientation however combined an entitys procedure with its data types of data models database model database model a database model is a specification describing how a database is structured and used several such models have been suggested common models include flat model this may not strictly qualify as a data model the flat or table model consists of a single twodimensional array of data elements where all members of a given column are assumed to be similar values and all members of a row are assumed to be related to one another hierarchical model the hierarchical model is similar to the network model except that links in the hierarchical model form a tree structurewhile the network model allows arbitrary graph network model this model organizes data using two fundamental constructs called records and sets records contain fields and sets define onetomany relationships between records one owner many membersthe network data model is an abstraction of the design concept used in the implementation of databases relational model is a database model based on firstorder predicate logic its core idea is to describe a database as a collection of predicates over a finite set of predicate variables describing constraints on the possible values and combinations of valuesthe power of the relational data model lies in its mathematical foundations and a simple userlevel paradigm objectrelational model similar to a relational database model but objects classes and inheritance are directly supported in database schemas and in the query language objectrole modeling a method of data modeling that has been defined as attribute free and fact based the result is a verifiably correct system from which other common artifacts such as erd uml and semantic models may be derived associations between data objects are described during the database design procedure such that normalization is an inevitable result of the process star schema the simplest style of data warehouse schema the star schema consists of a few fact tables possibly only one justifying the name referencing any number of dimension tables the star schema is considered an important special case of the snowflake schema flat model hierarchical model network model relational model conceptoriented model star schema data structure diagram data structure diagram example of a data structure diagram a data structure diagram dsd is a diagram and data model used to describe conceptual data models by providing graphical notations which document entities and their relationships and the constraints that bind them the basic graphic elements of dsds are boxes representing entities and arrows representing relationships data structure diagrams are most useful for documenting complex data entities data structure diagrams are an extension of the entityrelationship model er model in dsds attributes are specified inside the entity boxes rather than outside of them while relationships are drawn as boxes composed of attributes which specify the constraints that bind entities together dsds differ from the er model in that the er model focuses on the relationships between different entities whereas dsds focus on the relationships of the elements within an entity and enable users to fully see the links and relationships between each entity there are several styles for representing data structure diagrams with the notable difference in the manner of defining cardinality the choices are between arrow heads inverted arrow heads crows feet or numerical representation of the cardinality example of an idef1x entity relationship diagrams used to model idef1x itself entityrelationship model entityrelationship model an entityrelationship model erm sometimes referred to as an entityrelationship diagram erd could be used to represent an abstract conceptual data model or semantic data model or physical data model used in software engineering to represent structured data there are several notations used for erms like dsds attributes are specified inside the entity boxes rather than outside of them while relationships are drawn as lines with the relationship constraints as descriptions on the line the er model while robust can become visually cumbersome when representing entities with several attributes there are several styles for representing data structure diagrams with the notable difference in the manner of defining cardinality the choices are between arrow heads inverted arrow heads crows feet or numerical representation of the cardinality geographic data model data model gis a data model in geographic information systems is a mathematical construct for representing geographic objects or surfaces as data for example the vector data model represents geography as collections of points lines and polygons the raster data model represent geography as cell matrixes that store numeric values and the triangulated irregular network tin data model represents geography as sets of contiguous nonoverlapping triangles groups relate to process of making a map ngmdb data model applications ngmdb databases linked together representing 3d map information generic data model generic data model generic data models are generalizations of conventional data models they define standardised general relation types together with the kinds of things that may be related by such a relation type generic data models are developed as an approach to solve some shortcomings of conventional data models for example different modelers usually produce different conventional data models of the same domain this can lead to difficulty in bringing the models of different people together and is an obstacle for data exchange and data integration invariably however this difference is attributable to different levels of abstraction in the models and differences in the kinds of facts that can be instantiated the semantic expression capabilities of the models the modelers need to communicate and agree on certain elements which are to be rendered more concretely in order to make the differences less significant semantic data model semantic data model semantic data models a semantic data model in software engineering is a technique to define the meaning of data within the context of its interrelationships with other data a semantic data model is an abstraction which defines how the stored symbols relate to the real world a semantic data model is sometimes called a conceptual data model the logical data structure of a database management system dbms whether hierarchical network or relational cannot totally satisfy the requirements for a conceptual definition of data because it is limited in scope and biased toward the implementation strategy employed by the dbms therefore the need to define data from a conceptual view has led to the development of semantic data modeling techniques that is techniques to define the meaning of data within the context of its interrelationships with other data as illustrated in the figure the real world in terms of resources ideas events etc are symbolically defined within physical data stores a semantic data model is an abstraction which defines how the stored symbols relate to the real world thus the model must be a true representation of the real world data model topics data architecture data architecture data architecture is the design of data for use in defining the target state and the subsequent planning needed to hit the target state it is usually one of several architecture domains that form the pillars of an enterprise architecture or solution architecture a data architecture describes the data structures used by a business andor its applications there are descriptions of data in storage and data in motion descriptions of data stores data groups and data items and mappings of those data artifacts to data qualities applications locations etc essential to realizing the target state data architecture describes how data is processed stored and utilized in a given system it provides criteria for data processing operations that make it possible to design data flows and also control the flow of data in the system data modeling data modeling the data modeling process data modeling in software engineering is the process of creating a data model by applying formal data model descriptions using data modeling techniques data modeling is a technique for defining business requirements for a database it is sometimes called database modeling because a data model is eventually implemented in a database the figure illustrates the way data models are developed and used today a conceptual data model is developed based on the data requirements for the application that is being developed perhaps in the context of an activity model the data model will normally consist of entity types attributes relationships integrity rules and the definitions of those objects this is then used as the start point for interface or database design data properties some important properties of data for which requirements need to be met are definitionrelated properties relevance the usefulness of the data in the context of your business clarity the availability of a clear and shared definition for the data consistency the compatibility of the same type of data from different sources some important properties of data contentrelated properties timeliness the availability of data at the time required and how up to date that data is accuracy how close to the truth the data is properties related to both definition and content completeness how much of the required data is available accessibility where how and to whom the data is available or not available eg security cost the cost incurred in obtaining the data and making it available for use data organization another kind of data model describes how to organize data using a database management system or other data management technology it describes for example relational tables and columns or objectoriented classes and attributes such a data model is sometimes referred to as the physical data model but in the original ansi three schema architecture it is called logical in that architecture the physical model describes the storage media cylinders tracks and tablespaces ideally this model is derived from the more conceptual data model described above it may differ however to account for constraints like processing capacity and usage patterns while data analysis is a common term for data modeling the activity actually has more in common with the ideas and methods of synthesis inferring general concepts from particular instances than it does with analysis identifying component concepts from more general ones presumably we call ourselves systems analysts because no one can say systems synthesists data modeling strives to bring the data structures of interest together into a cohesive inseparable whole by eliminating unnecessary data redundancies and by relating data structures with relationships a different approach is to use adaptive systems such as artificial neural networks that can autonomously create implicit models of data data structure data structure a binary tree a simple type of branching linked data structure a data structure is a way of storing data in a computer so that it can be used efficiently it is an organization of mathematical and logical concepts of data often a carefully chosen data structure will allow the most efficient algorithm to be used the choice of the data structure often begins from the choice of an abstract data type a data model describes the structure of the data within a given domain and by implication the underlying structure of that domain itself this means that a data model in fact specifies a dedicated grammar for a dedicated artificial language for that domain a data model represents classes of entities kinds of things about which a company wishes to hold information the attributes of that information and relationships among those entities and often implicit relationships among those attributes the model describes the organization of the data to some extent irrespective of how data might be represented in a computer system the entities represented by a data model can be the tangible entities but models that include such concrete entity classes tend to change over time robust data models often identify abstractions of such entities for example a data model might include an entity class called person representing all the people who interact with an organization such an abstract entity class is typically more appropriate than ones called vendor or employee which identify specific roles played by those people array hash table linked list stack data structure data model theory the term data model can have two meanings a data model theory ie a formal description of how data may be structured and accessed a data model instance ie applying a data model theory to create a practical data model instance for some particular application a data model theory has three main components the structural part a collection of data structures which are used to create databases representing the entities or objects modeled by the database the integrity part a collection of rules governing the constraints placed on these data structures to ensure structural integrity the manipulation part a collection of operators which can be applied to the data structures to update and query the data contained in the database for example in the relational model the structural part is based on a modified concept of the mathematical relation the integrity part is expressed in firstorder logic and the manipulation part is expressed using the relational algebra tuple calculus and domain calculus a data model instance is created by applying a data model theory this is typically done to solve some business enterprise requirement business requirements are normally captured by a semantic logical data model this is transformed into a physical data model instance from which is generated a physical database for example a data modeler may use a data modeling tool to create an entityrelationship model of the corporate data repository of some business enterprise this model is transformed into a relational model which in turn generates a relational database patterns patterns are common data modeling structures that occur in many data models related models data flow diagram data flow diagram data flow diagram example a data flow diagram dfd is a graphical representation of the flow of data through an information system it differs from the flowchart as it shows the data flow instead of the control flow of the program a data flow diagram can also be used for the visualization of data processing structured design data flow diagrams were invented by larry constantine the original developer of structured design based on martin and estrins data flow graph model of computation it is common practice to draw a contextlevel data flow diagram first which shows the interaction between the system and outside entities the dfd is designed to show how a system is divided into smaller portions and to highlight the flow of data between those parts this contextlevel data flow diagram is then exploded to show more detail of the system being modeled information model information model example of an express g information model an information model is not a type of data model but more or less an alternative model within the field of software engineering both a data model and an information model can be abstract formal representations of entity types that includes their properties relationships and the operations that can be performed on them the entity types in the model may be kinds of realworld objects such as devices in a network or they may themselves be abstract such as for the entities used in a billing system typically they are used to model a constrained domain that can be described by a closed set of entity types properties relationships and operations according to lee 1999 more in general the term information model is used for models of individual things such as facilities buildings process plants etc in those cases the concept is specialised to facility information model building information model plant information model etc such an information model is an integration of a model of the facility with the data and documents about the facility an information model provides formalism to the description of a problem domain without constraining how that description is mapped to an actual implementation in software there may be many mappings of the information model such mappings are called data models irrespective of whether they are object models eg using uml entity relationship models or xml schemas document object model a standard object model for representing html or xml object model object model an object model in computer science is a collection of objects or classes through which a program can examine and manipulate some specific parts of its world in other words the objectoriented interface to some service or system such an interface is said to be the object model of the represented service or system for example the document object model dom is an object model for controlling an astronomical telescope in computing the term object model has a distinct second meaning of the general properties of objects in a specific computer programming language technology notation or methodology that uses them for example the java object model the com object model or the object model of omt such object models are usually defined using concepts such as class message inheritance polymorphism and encapsulation there is an extensive literature on formalized object models as a subset of the formal semantics of programming languages objectrole model objectrole modeling example of the application of objectrole modeling in a schema for geologic surface stephen m richard 1999 objectrole modeling orm is a method for conceptual modeling and can be used as a tool for information and rules analysis objectrole modeling is a factoriented method for performing systems analysis at the conceptual level the quality of a database application depends critically on its design to help ensure correctness clarity adaptability and productivity information systems are best specified first at the conceptual level using concepts and language that people can readily understand the conceptual design may include data process and behavioral perspectives and the actual dbms used to implement the design might be based on one of many logical data models relational hierarchic network objectoriented etc unified modeling language models unified modeling language the unified modeling language uml is a standardized generalpurpose modeling language in the field of software engineering it is a graphical language for visualizing specifying constructing and documenting the artifacts of a softwareintensive system the unified modeling language offers a standard way to write a systems blueprints including conceptual things such as business processes and system functions concrete things such as programming language statements database schemas and reusable software components uml offers a mix of functional models data models and database models business process model core architecture data model data dictionary jc3iedm process model data format description language dfdl data collection system david c hay 1996 data model patterns conventions of thought new yorkdorset house publishers inc len silverston 2001 the data model resource book volume 12 john wiley sons len silverston paul agnew 2008 the data model resource book universal patterns for data modeling volume 3 john wiley sons matthew west and julian fowler 1999 developing high quality data models the european process industries step technical liaison executive epistle matthew west 2011 developing high quality data models morgan kaufmann vtedata modelmain architecture modeling structure schemas conceptual logical physical types database data structure diagram entityrelationship model enhanced geographic generic semantic related models data flow diagram information model object model objectrole modeling unified modeling language see also database design business process modeling core architecture data model enterprise modelling function model process modeling xml schema data format description language vtesoftware engineeringfields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc modelsdevelopmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml softwareengineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons 