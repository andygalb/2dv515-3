system integration software development core activities processes requirements design engineering construction testing debugging deployment maintenance paradigms and models agile cleanroom incremental prototyping spiral v model waterfall methodologies and frameworks asd devops dad dsdm fdd iid kanban lean sd less mdd msf psp rad rup safe scrum semat tsp up xp supporting disciplines configuration management documentation software quality assurance sqa project management user experience practices atdd bdd cco ci cd ddd pp standup tdd tools compiler debugger profiler gui designer modeling ide build automation release automation infrastructure as code testing standards and bodies of knowledge babok cmmi ieee standards iso 9001 isoiec standards pmbok swebok itil glossaries artificial intelligence computer science electrical and electronics engineering vte system integration is defined in engineering as the process of bringing together the component subsystems into one system an aggregation of subsystems cooperating so that the system is able to deliver the overarching functionality and ensuring that the subsystems function together as a system to act as a coordinated whole the system integrator integrates discrete systems utilizing a variety of techniques such as computer networking enterprise application integration business process management or manual programming system integration involves integrating existing often disparate systems in such a way that focuses on increasing value to the customer methods of integration vertical integration as opposed to horizontal integration is the process of integrating subsystems according to their functionality by creating functional entities also referred to as silos star integration also known as spaghetti integration is a process of systems integration where each system is interconnected to each of the remaining subsystems when observed from the perspective of the subsystem which is being integrated the connections are reminiscent of a star but when the overall diagram of the system is presented the connections look like spaghetti hence the name of this method the cost varies because of the interfaces that subsystems are exporting in a case where the subsystems are exporting heterogeneous or proprietary interfaces the integration cost can substantially rise time and costs needed to integrate the systems increase exponentially when adding additional subsystems from the feature perspective this method often seems preferable due to the extreme flexibility of the reuse of functionality horizontal integration or enterprise service bus esb is an integration method in which a specialized subsystem is dedicated to communication between other subsystems this allows cutting the number of connections interfaces to only one per subsystem which will connect directly to the esb the esb is capable of translating the interface into another interface this allows cutting the costs of integration and provides extreme flexibility with systems integrated using this method it is possible to completely replace one subsystem with another subsystem which provides similar functionality but exports different interfaces all this completely transparent for the rest of the subsystems the only action required is to implement the new interface between the esb and the new subsystem the horizontal scheme can be misleading however if it is thought that the cost of intermediate data transformation or the cost of shifting responsibility over business logic can be avoided a common data format is an integration method to avoid every adapter having to convert data tofrom every other applications formats enterprise application integration eai systems usually stipulate an applicationindependent or common data format the eai system usually provides a data transformation service as well to help convert between applicationspecific and common formats this is done in two steps the adapter converts information from the applications format to the buss common format then semantic transformations are applied on this converting zip codes to city names splittingmerging objects from one application into objects in the other applications and so on continuous integration system in package and system on a chip enterprise application integration integration platform integration competency center interoperability system of record systems integrator multidisciplinary approach cloudbased integration system design modular design configuration design csia control system integrators association vtesystems engineeringsubfields aerospace engineering biological systems engineering configuration management earth systems engineering and management electrical engineering enterprise systems engineering performance engineering reliability engineering safety engineering processes requirements engineering functional specification system integration verification and validation design review concepts business process system system lifecycle vmodel systems development life cycle tools decisionmaking function modelling idef optimization quality function deployment system dynamics systems modeling language systems analysis systems modeling work breakdown structure people james s albus ruzena bajcsy benjamin s blanchard wernher von braun kathleen carley harold chestnut wolt fabrycky barbara grosz arthur david hall iii derek hitchins robert e machol radhika nagpal simon ramo joseph francis shea katia sycara manuela m veloso john n warfield related fields control engineering computer engineering industrial engineering operations research project management quality management risk management software engineering category 