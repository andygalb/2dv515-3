operating system operating systems common features process management interrupts memory management file system device drivers networking security io vte an operating system os is system software that manages computer hardware and software resources and provides common services for computer programs timesharing operating systems schedule tasks for efficient use of the system and may also include accounting software for cost allocation of processor time mass storage printing and other resources for hardware functions such as input and output and memory allocation the operating system acts as an intermediary between programs and the computer hardware although the application code is usually executed directly by the hardware and frequently makes system calls to an os function or is interrupted by it operating systems are found on many devices that contain a computer from cellular phones and video game consoles to web servers and supercomputers the dominant desktop operating system is microsoft windows with a market share of around 8274 macos by apple inc is in second place 1323 and the varieties of linux are collectively in third place 157 linux distributions are dominant in the server and supercomputing sectors other specialized classes of operating systems such as embedded and realtime systems exist for many applications types of operating systems single and multitasking a singletasking system can only run one program at a time while a multitasking operating system allows more than one program to be running in concurrency this is achieved by timesharing where the available processor time is divided between multiple processes these processes are each interrupted repeatedly in time slices by a taskscheduling subsystem of the operating system multitasking may be characterized in preemptive and cooperative types in preemptive multitasking the operating system slices the cpu time and dedicates a slot to each of the programs unixlike operating systems such as solaris and linuxas well as nonunixlike such as amigaossupport preemptive multitasking cooperative multitasking is achieved by relying on each process to provide time to the other processes in a defined manner 16bit versions of microsoft windows used cooperative multitasking 32bit versions of both windows nt and win9x used preemptive multitasking single and multiuser singleuser operating systems have no facilities to distinguish users but may allow multiple programs to run in tandem a multiuser operating system extends the basic concept of multitasking with facilities that identify processes and resources such as disk space belonging to multiple users and the system permits multiple users to interact with the system at the same time timesharing operating systems schedule tasks for efficient use of the system and may also include accounting software for cost allocation of processor time mass storage printing and other resources to multiple users distributed a distributed operating system manages a group of distinct computers and makes them appear to be a single computer the development of networked computers that could be linked and communicate with each other gave rise to distributed computing distributed computations are carried out on more than one machine when computers in a group work in cooperation they form a distributed system templated in an os distributed and cloud computing context templating refers to creating a single virtual machine image as a guest operating system then saving it as a tool for multiple running virtual machines the technique is used both in virtualization and cloud computing management and is common in large server warehouses embedded embedded operating systems are designed to be used in embedded computer systems they are designed to operate on small machines like pdas with less autonomy they are able to operate with a limited number of resources they are very compact and extremely efficient by design windows ce and minix 3 are some examples of embedded operating systems realtime a realtime operating system is an operating system that guarantees to process events or data by a specific moment in time a realtime operating system may be single or multitasking but when multitasking it uses specialized scheduling algorithms so that a deterministic nature of behavior is achieved an eventdriven system switches between tasks based on their priorities or external events while timesharing operating systems switch tasks based on clock interrupts library a library operating system is one in which the services that a typical operating system provides such as networking are provided in the form of libraries and composed with the application and configuration code to construct a unikernel a specialized single address space machine image that can be deployed to cloud or embedded environments history history of operating systems see also resident monitor early computers were built to perform a series of single tasks like a calculator basic operating system features were developed in the 1950s such as resident monitor functions that could automatically run different programs in succession to speed up processing operating systems did not exist in their modern and more complex forms until the early 1960s hardware features were added that enabled use of runtime libraries interrupts and parallel processing when personal computers became popular in the 1980s operating systems were made for them similar in concept to those used on larger computers in the 1940s the earliest electronic digital systems had no operating systems electronic systems of this time were programmed on rows of mechanical switches or by jumper wires on plug boards these were specialpurpose systems that for example generated ballistics tables for the military or controlled the printing of payroll checks from data on punched paper cards after programmable general purpose computers were invented machine languages consisting of strings of the binary digits 0 and 1 on punched paper tape were introduced that sped up the programming process stern 1981 os360 was used on most ibm mainframe computers beginning in 1966 including computers used by the apollo program in the early 1950s a computer could execute only one program at a time each user had sole use of the computer for a limited period of time and would arrive at a scheduled time with program and data on punched paper cards or punched tape the program would be loaded into the machine and the machine would be set to work until the program completed or crashed programs could generally be debugged via a front panel using toggle switches and panel lights it is said that alan turing was a master of this on the early manchester mark 1 machine and he was already deriving the primitive conception of an operating system from the principles of the universal turing machine later machines came with libraries of programs which would be linked to a users program to assist in operations such as input and output and generating computer code from humanreadable symbolic code this was the genesis of the modernday operating system however machines still ran a single job at a time at cambridge university in england the job queue was at one time a washing line clothes line from which tapes were hung with different colored clothespegs to indicate jobpriority an improvement was the atlas supervisor introduced with the manchester atlas commissioned in 1962 considered by many to be the first recognisable modern operating system mainframes history of ibm mainframe operating systems through the 1950s many major features were pioneered in the field of operating systems on mainframe computers including batch processing inputoutput interrupt buffering multitasking spooling runtime libraries linkloading and programs for sorting records in files these features were included or not included in application software at the option of application programmers rather than in a separate operating system used by all applications in 1959 the share operating system was released as an integrated utility for the ibm 704 and later in the 709 and 7090 mainframes although it was quickly supplanted by ibsysibjob on the 709 7090 and 7094 during the 1960s ibms os360 introduced the concept of a single os spanning an entire product line which was crucial for the success of the system360 machines ibms current mainframe operating systems are distant descendants of this original system and applications written for os360 can still be run on modern machines os360 also pioneered the concept that the operating system keeps track of all of the system resources that are used including program and data space allocation in main memory and file space in secondary storage and file locking during update when the process is terminated for any reason all of these resources are reclaimed by the operating system the alternative cp67 system for the s36067 started a whole line of ibm operating systems focused on the concept of virtual machines other operating systems used on ibm s360 series mainframes included systems developed by ibm cos360 compatibility operating system dos360 disk operating system tss360 time sharing system tos360 tape operating system bos360 basic operating system and acp airline control program as well as a few nonibm systems mts michigan terminal system music multiuser system for interactive computing and orvyl stanford timesharing system control data corporation developed the scope operating system in the 1960s for batch processing in cooperation with the university of minnesota the kronos and later the nos operating systems were developed during the 1970s which supported simultaneous batch and timesharing use like many commercial timesharing systems its interface was an extension of the dartmouth basic operating systems one of the pioneering efforts in timesharing and programming languages in the late 1970s control data and the university of illinois developed the plato operating system which used plasma panel displays and longdistance time sharing networks plato was remarkably innovative for its time featuring realtime chat and multiuser graphical games in 1961 burroughs corporation introduced the b5000 with the mcp master control program operating system the b5000 was a stack machine designed to exclusively support highlevel languages with no machine language or assembler and indeed the mcp was the first os to be written exclusively in a highlevel language espol a dialect of algol mcp also introduced many other groundbreaking innovations such as being the first commercial implementation of virtual memory during development of the as400 ibm made an approach to burroughs to license mcp to run on the as400 hardware this proposal was declined by burroughs management to protect its existing hardware production mcp is still in use today in the unisys clearpathmcp line of computers univac the first commercial computer manufacturer produced a series of exec operating systems like all early mainframe systems this batchoriented system managed magnetic drums disks card readers and line printers in the 1970s univac produced the realtime basic rtb system to support largescale time sharing also patterned after the dartmouth bc system general electric and mit developed general electric comprehensive operating supervisor gecos which introduced the concept of ringed security privilege levels after acquisition by honeywell it was renamed general comprehensive operating system gcos digital equipment corporation developed many operating systems for its various computer lines including tops10 and tops20 time sharing systems for the 36bit pdp10 class systems before the widespread use of unix tops10 was a particularly popular system in universities and in the early arpanet community rt11 was a singleuser realtime os for the pdp11 class minicomputer and rsx11 was the corresponding multiuser os from the late 1960s through the late 1970s several hardware capabilities evolved that allowed similar or ported software to run on more than one system early systems had utilized microprogramming to implement features on their systems in order to permit different underlying computer architectures to appear to be the same as others in a series in fact most 360s after the 36040 except the 360165 and 360168 were microprogrammed implementations the enormous investment in software for these systems made since the 1960s caused most of the original computer manufacturers to continue to develop compatible operating systems along with the hardware notable supported mainframe operating systems include burroughs mcp b5000 1961 to unisys clearpathmcp present ibm os360 ibm system360 1966 to ibm zos present ibm cp67 ibm system360 1967 to ibm zvm univac exec 8 univac 1108 1967 to os 2200 unisys clearpath dorado present microcomputers pc dos was an early personal computer os that featured a command line interface mac os by apple computer became the first widespread os to feature a graphical user interface many of its features such as windows and icons would later become commonplace in guis the first microcomputers did not have the capacity or need for the elaborate operating systems that had been developed for mainframes and minis minimalistic operating systems were developed often loaded from rom and known as monitors one notable early disk operating system was cpm which was supported on many early microcomputers and was closely imitated by microsofts msdos which became widely popular as the operating system chosen for the ibm pc ibms version of it was called ibm dos or pc dos in the 1980s apple computer inc now apple inc abandoned its popular apple ii series of microcomputers to introduce the apple macintosh computer with an innovative graphical user interface gui to the mac os the introduction of the intel 80386 cpu chip in october 1985 with 32bit architecture and paging capabilities provided personal computers with the ability to run multitasking operating systems like those of earlier minicomputers and mainframes microsoft responded to this progress by hiring dave cutler who had developed the vms operating system for digital equipment corporation he would lead the development of the windows nt operating system which continues to serve as the basis for microsofts operating systems line steve jobs a cofounder of apple inc started next computer inc which developed the nextstep operating system nextstep would later be acquired by apple inc and used along with code from freebsd as the core of mac os x macos after latest name change the gnu project was started by activist and programmer richard stallman with the goal of creating a complete free software replacement to the proprietary unix operating system while the project was highly successful in duplicating the functionality of various parts of unix development of the gnu hurd kernel proved to be unproductive in 1991 finnish computer science student linus torvalds with cooperation from volunteers collaborating over the internet released the first version of the linux kernel it was soon merged with the gnu user space components and system software to form a complete operating system since then the combination of the two major components has usually been referred to as simply linux by the software industry a naming convention that stallman and the free software foundation remain opposed to preferring the name gnulinux the berkeley software distribution known as bsd is the unix derivative distributed by the university of california berkeley starting in the 1970s freely distributed and ported to many minicomputers it eventually also gained a following for use on pcs mainly as freebsd netbsd and openbsd examples unix and unixlike operating systems unix evolution of unix systems unix was originally written in assembly language ken thompson wrote b mainly based on bcpl based on his experience in the multics project b was replaced by c and unix rewritten in c developed into a large complex family of interrelated operating systems which have been influential in every modern operating system see history the unixlike family is a diverse group of operating systems with several major subcategories including system v bsd and linux the name unix is a trademark of the open group which licenses it for use with any operating system that has been shown to conform to their definitions unixlike is commonly used to refer to the large set of operating systems which resemble the original unix unixlike systems run on a wide variety of computer architectures they are used heavily for servers in business as well as workstations in academic and engineering environments free unix variants such as linux and bsd are popular in these areas four operating systems are certified by the open group holder of the unix trademark as unix hps hpux and ibms aix are both descendants of the original system v unix and are designed to run only on their respective vendors hardware in contrast sun microsystemss solaris can run on multiple types of hardware including x86 and sparc servers and pcs apples macos a replacement for apples earlier nonunix mac os is a hybrid kernelbased bsd variant derived from nextstep mach and freebsd unix interoperability was sought by establishing the posix standard the posix standard can be applied to any operating system although it was originally created for various unix variants bsd and its descendants berkeley software distribution the first server for the world wide web ran on nextstep based on bsd a subgroup of the unix family is the berkeley software distribution family which includes freebsd netbsd and openbsd these operating systems are most commonly found on webservers although they can also function as a personal computer os the internet owes much of its existence to bsd as many of the protocols now commonly used by computers to connect send and receive data over a network were widely implemented and refined in bsd the world wide web was also first demonstrated on a number of computers running an os based on bsd called nextstep in 1974 university of california berkeley installed its first unix system over time students and staff in the computer science department there began adding new programs to make things easier such as text editors when berkeley received new vax computers in 1978 with unix installed the schools undergraduates modified unix even more in order to take advantage of the computers hardware possibilities the defense advanced research projects agency of the us department of defense took interest and decided to fund the project many schools corporations and government organizations took notice and started to use berkeleys version of unix instead of the official one distributed by att steve jobs upon leaving apple inc in 1985 formed next inc a company that manufactured highend computers running on a variation of bsd called nextstep one of these computers was used by tim bernerslee as the first webserver to create the world wide web developers like keith bostic encouraged the project to replace any nonfree code that originated with bell labs once this was done however att sued after two years of legal disputes the bsd project spawned a number of free derivatives such as netbsd and freebsd both in 1993 and openbsd from netbsd in 1995 macos macos macos formerly mac os x and later os x is a line of open core graphical operating systems developed marketed and sold by apple inc the latest of which is preloaded on all currently shipping macintosh computers macos is the successor to the original classic mac os which had been apples primary operating system since 1984 unlike its predecessor macos is a unix operating system built on technology that had been developed at next through the second half of the 1980s and up until apple purchased the company in early 1997 the operating system was first released in 1999 as mac os x server 10 followed in march 2001 by a client version mac os x v100 cheetah since then six more distinct client and server editions of macos have been released until the two were merged in os x 107 lion prior to its merging with macos the server edition macos server was architecturally identical to its desktop counterpart and usually ran on apples line of macintosh server hardware macos server included work group management and administration software tools that provide simplified access to key network services including a mail transfer agent a samba server an ldap server a domain name server and others with mac os x v107 lion all server aspects of mac os x server have been integrated into the client version and the product rebranded as os x dropping mac from the name the server tools are now offered as an application linux linux and linux kernel ubuntu desktop linux distribution the linux kernel originated in 1991 as a project of linus torvalds while a university student in finland he posted information about his project on a newsgroup for computer students and programmers and received support and assistance from volunteers who succeeded in creating a complete and functional kernel linux is unixlike but was developed without any unix code unlike bsd and its variants because of its open license model the linux kernel code is available for study and modification which resulted in its use on a wide range of computing machinery from supercomputers to smartwatches although estimates suggest that linux is used on only 182 of all desktop or laptop pcs many of the same computers are also on green500 but in different order and linux runs on the top 10 linux is also commonly used on other small energyefficient computers such as smartphones and smartwatches the linux kernel is used in some popular distributions such as red hat debian ubuntu linux mint and googles android chrome os and chromium os microsoft windows microsoft windows microsoft windows is a family of proprietary operating systems designed by microsoft corporation and primarily targeted to intel architecture based computers with an estimated 889 percent total usage share on web connected computers the latest version is windows 10 in 2011 windows 7 overtook windows xp as most common version in use microsoft windows was first released in 1985 as an operating environment running on top of msdos which was the standard operating system shipped on most intel architecture personal computers at the time in 1995 windows 95 was released which only used msdos as a bootstrap for backwards compatibility win9x could run realmode msdos in addition itanium is still supported in older server version windows server 2008 r2 in the past windows nt supported additional architectures server editions of windows are widely used in recent years microsoft has expended significant capital in an effort to promote the use of windows as a server operating system however windows usage on servers is not as widespread as on personal computers as windows competes against linux and bsd for server market share reactos is a windowsalternative operating system which is being developed on the principles of windows without using any of microsofts code other there have been many operating systems that were significant in their day but are no longer so such as amigaos os2 from ibm and microsoft classic mac os the nonunix precursor to apples macos beos xts300 risc os morphos haiku baremetal and freemint some are still used in niche markets and continue to be developed as minority platforms for enthusiast communities and specialist applications openvms formerly from dec is still under active development by hewlettpackard yet other operating systems are used almost exclusively in academia for operating systems education or to do research on operating system concepts a typical example of a system that fulfills both roles is minix while for example singularity is used purely for research another example is the oberon system designed at eth zrich by niklaus wirth jrg gutknecht and a group of students at the former computer systems institute in the 1980s it was used mainly for research teaching and daily work in wirths group other operating systems have failed to win significant market share but have introduced innovations that have influenced mainstream operating systems not least bell labs plan 9 components the components of an operating system all exist in order to make the different parts of a computer work together all user software needs to go through the operating system in order to use any of the hardware whether it be as simple as a mouse or keyboard or as complex as an internet component kernel kernel computing a kernel connects the application software to the hardware of a computer with the aid of the firmware and device drivers the kernel provides the most basic level of control over all of the computers hardware devices it manages memory access for programs in the ram it determines which programs get access to which hardware resources it sets up or resets the cpus operating states for optimal operation at all times and it organizes the data for longterm nonvolatile storage with file systems on such media as disks tapes flash memory etc program execution process computing the operating system provides an interface between an application program and the computer hardware so that an application program can interact with the hardware only by obeying rules and procedures programmed into the operating system the operating system is also a set of services which simplify development and execution of application programs executing an application program involves the creation of a process by the operating system kernel which assigns memory space and other resources establishes a priority for the process in multitasking systems loads program binary code into memory and initiates execution of the application program which then interacts with the user and with hardware devices interrupts interrupt interrupts are central to operating systems as they provide an efficient way for the operating system to interact with and react to its environment the alternative having the operating system watch the various sources of input for events polling that require action can be found in older systems with very small stacks 50 or 60 bytes but is unusual in modern systems with large stacks interruptbased programming is directly supported by most modern cpus interrupts provide a computer with a way of automatically saving local register contexts and running specific code in response to events even very basic computers support hardware interrupts and allow the programmer to specify code which may be run when that event takes place when an interrupt is received the computers hardware automatically suspends whatever program is currently running saves its status and runs computer code previously associated with the interrupt this is analogous to placing a bookmark in a book in response to a phone call in modern operating systems interrupts are handled by the operating systems kernel interrupts may come from either the computers hardware or the running program when a hardware device triggers an interrupt the operating systems kernel decides how to deal with this event generally by running some processing code the amount of code being run depends on the priority of the interrupt for example a person usually responds to a smoke detector alarm before answering the phone the processing of hardware interrupts is a task that is usually delegated to software called a device driver which may be part of the operating systems kernel part of another program or both device drivers may then relay information to a running program by various means a program may also trigger an interrupt to the operating system if a program wishes to access hardware for example it may interrupt the operating systems kernel which causes control to be passed back to the kernel the kernel then processes the request if a program wishes additional resources or wishes to shed resources such as memory it triggers an interrupt to get the kernels attention modes user mode and supervisor mode privilege rings for the x86 microprocessor architecture available in protected mode operating systems determine which processes run in each mode modern microprocessors cpu or mpu support multiple modes of operation cpus with this capability offer at least two modes user mode and supervisor mode in general terms supervisor mode operation allows unrestricted access to all machine resources including all mpu instructions user mode operation sets limits on instruction use and typically disallows direct access to machine resources cpus might have other modes similar to user mode as well such as the virtual modes in order to emulate older processor types such as 16bit processors on a 32bit one or 32bit processors on a 64bit one at poweron or reset the system begins in supervisor mode once an operating system kernel has been loaded and started the boundary between user mode and supervisor mode also known as kernel mode can be established supervisor mode is used by the kernel for low level tasks that need unrestricted access to hardware such as controlling how memory is accessed and communicating with devices such as disk drives and video display devices user mode in contrast is used for almost everything else application programs such as word processors and database managers operate within user mode and can only access machine resources by turning control over to the kernel a process which causes a switch to supervisor mode typically the transfer of control to the kernel is achieved by executing a software interrupt instruction such as the motorola 68000 trap instruction the software interrupt causes the microprocessor to switch from user mode to supervisor mode and begin executing code that allows the kernel to take control in user mode programs usually have access to a restricted set of microprocessor instructions and generally cannot execute any instructions that could potentially cause disruption to the systems operation in supervisor mode instruction execution restrictions are typically removed allowing the kernel unrestricted access to all machine resources the term user mode resource generally refers to one or more cpu registers which contain information that the running program isnt allowed to alter attempts to alter these resources generally causes a switch to supervisor mode where the operating system can deal with the illegal operation the program was attempting for example by forcibly terminating killing the program memory management memory management among other things a multiprogramming operating system kernel must be responsible for managing all system memory which is currently in use by programs this ensures that a program does not interfere with memory already in use by another program since programs time share each program must have independent access to memory cooperative memory management used by many early operating systems assumes that all programs make voluntary use of the kernels memory manager and do not exceed their allocated memory this system of memory management is almost never seen any more since programs often contain bugs which can cause them to exceed their allocated memory if a program fails it may cause memory used by one or more other programs to be affected or overwritten malicious programs or viruses may purposefully alter another programs memory or may affect the operation of the operating system itself with cooperative memory management it takes only one misbehaved program to crash the system memory protection enables the kernel to limit a process access to the computers memory various methods of memory protection exist including memory segmentation and paging all methods require some level of hardware support such as the 80286 mmu which doesnt exist in all computers in both segmentation and paging certain protected mode registers specify to the cpu what memory address it should allow a running program to access attempts to access other addresses trigger an interrupt which cause the cpu to reenter supervisor mode placing the kernel in charge this is called a segmentation violation or segv for short and since it is both difficult to assign a meaningful result to such an operation and because it is usually a sign of a misbehaving program the kernel generally resorts to terminating the offending program and reports the error windows versions 31 through me had some level of memory protection but programs could easily circumvent the need to use it a general protection fault would be produced indicating a segmentation violation had occurred however the system would often crash anyway virtual memory virtual memory further information page fault many operating systems can trick programs into using memory scattered around the hard disk and ram as if it is one continuous chunk of memory called virtual memory the use of virtual memory addressing such as paging or segmentation means that the kernel can choose what memory each program may use at any given time allowing the operating system to use the same memory locations for multiple tasks if a program tries to access memory that isnt in its current range of accessible memory but nonetheless has been allocated to it the kernel is interrupted in the same way as it would if the program were to exceed its allocated memory see section on memory management under unix this kind of interrupt is referred to as a page fault when the kernel detects a page fault it generally adjusts the virtual memory range of the program which triggered it granting it access to the memory requested this gives the kernel discretionary power over where a particular applications memory is stored or even whether or not it has actually been allocated yet in modern operating systems memory which is accessed less frequently can be temporarily stored on disk or other media to make that space available for use by other programs this is called swapping as an area of memory can be used by multiple programs and what that memory area contains can be swapped or exchanged on demand virtual memory provides the programmer or the user with the perception that there is a much larger amount of ram in the computer than is really there multitasking computer multitasking and process management computing further information context switch preemptive multitasking and cooperative multitasking multitasking refers to the running of multiple independent computer programs on the same computer giving the appearance that it is performing the tasks at the same time since most computers can do at most one or two things at one time this is generally done via timesharing which means that each program uses a share of the computers time to execute an operating system kernel contains a scheduling program which determines how much time each process spends executing and in which order execution control should be passed to programs control is passed to a process by the kernel which allows the program access to the cpu and memory later control is returned to the kernel through some mechanism so that another program may be allowed to use the cpu this socalled passing of control between the kernel and applications is called a context switch an early model which governed the allocation of time to programs was called cooperative multitasking in this model when control is passed to a program by the kernel it may execute for as long as it wants before explicitly returning control to the kernel this means that a malicious or malfunctioning program may not only prevent any other programs from using the cpu but it can hang the entire system if it enters an infinite loop modern operating systems extend the concepts of application preemption to device drivers and kernel code so that the operating system has preemptive control over internal runtimes as well the philosophy governing preemptive multitasking is that of ensuring that all programs are given regular time on the cpu this implies that all programs must be limited in how much time they are allowed to spend on the cpu without being interrupted to accomplish this modern operating system kernels make use of a timed interrupt a protected mode timer is set by the kernel which triggers a return to supervisor mode after the specified time has elapsed see above sections on interrupts and dual mode operation on many single user operating systems cooperative multitasking is perfectly adequate as home computers generally run a small number of well tested programs the amigaos is an exception having preemptive multitasking from its very first version windows nt was the first version of microsoft windows which enforced preemptive multitasking but it didnt reach the home user market until windows xp since windows nt was targeted at professionals disk access and file systems virtual file system file systems allow users and programs to organize and sort files on a computer often through the use of directories or folders access to data stored on disks is a central feature of all operating systems computers store data on disks using files which are structured in specific ways in order to allow for faster access higher reliability and to make better use of the drives available space the specific way in which files are stored on a disk is called a file system and enables files to have names and attributes it also allows them to be stored in a hierarchy of directories or folders arranged in a directory tree early operating systems generally supported a single type of disk drive and only one kind of file system early file systems were limited in their capacity speed and in the kinds of file names and directory structures they could use these limitations often reflected limitations in the operating systems they were designed for making it very difficult for an operating system to support more than one file system while many simpler operating systems support a limited range of options for accessing storage systems operating systems like unix and linux support a technology known as a virtual file system or vfs an operating system such as unix supports a wide array of storage devices regardless of their design or file systems allowing them to be accessed through a common application programming interface api this makes it unnecessary for programs to have any knowledge about the device they are accessing a vfs allows the operating system to provide programs with access to an unlimited number of devices with an infinite variety of file systems installed on them through the use of specific device drivers and file system drivers a connected storage device such as a hard drive is accessed through a device driver the device driver understands the specific language of the drive and is able to translate that language into a standard language used by the operating system to access all disk drives on unix this is the language of block devices when the kernel has an appropriate device driver in place it can then access the contents of the disk drive in raw format which may contain one or more file systems a file system driver is used to translate the commands used to access each specific file system into a standard set of commands that the operating system can use to talk to all file systems programs can then deal with these file systems on the basis of filenames and directoriesfolders contained within a hierarchical structure they can create delete open and close files as well as gather various information about them including access permissions size free space and creation and modification dates various differences between file systems make supporting all file systems difficult allowed characters in file names case sensitivity and the presence of various kinds of file attributes makes the implementation of a single interface for every file system a daunting task operating systems tend to recommend using and so support natively file systems specifically designed for them for example ntfs in windows and ext3 and reiserfs in linux however in practice third party drivers are usually available to give support for the most widely used file systems in most generalpurpose operating systems for example ntfs is available in linux through ntfs3g and ext23 and reiserfs are available in windows through thirdparty software support for file systems is highly varied among modern operating systems although there are several common file systems which almost all operating systems include support and drivers for operating systems vary on file system support and on the disk formats they may be installed on under windows each file system is usually limited in application to certain media for example cds must use iso 9660 or udf and as of windows vista ntfs is the only file system which the operating system can be installed on it is possible to install linux onto many types of file systems unlike other operating systems linux and unix allow any file system to be used regardless of the media it is stored in whether it is a hard drive a disc cd dvd a usb flash drive or even contained within a file located on another file system device drivers device driver a device driver is a specific type of computer software developed to allow interaction with hardware devices typically this constitutes an interface for communicating with the device through the specific computer bus or communications subsystem that the hardware is connected to providing commands to andor receiving data from the device and on the other end the requisite interfaces to the operating system and software applications it is a specialized hardwaredependent computer program which is also operating system specific that enables another program typically an operating system or applications software package or computer program running under the operating system kernel to interact transparently with a hardware device and usually provides the requisite interrupt handling necessary for any necessary asynchronous timedependent hardware interfacing needs the key design goal of device drivers is abstraction every model of hardware even within the same class of device is different newer models also are released by manufacturers that provide more reliable or better performance and these newer models are often controlled differently computers and their operating systems cannot be expected to know how to control every device both now and in the future to solve this problem operating systems essentially dictate how every type of device should be controlled the function of the device driver is then to translate these operating system mandated function calls into device specific calls in theory a new device which is controlled in a new manner should function correctly if a suitable driver is available this new driver ensures that the device appears to operate as usual from the operating systems point of view under versions of windows before vista and versions of linux before 26 all driver execution was cooperative meaning that if a driver entered an infinite loop it would freeze the system more recent revisions of these operating systems incorporate kernel preemption where the kernel interrupts the driver to give it tasks and then separates itself from the process until it receives a response from the device driver or gives it more tasks to do networking computer network currently most operating systems support a variety of networking protocols hardware and applications for using them this means that computers running dissimilar operating systems can participate in a common network for sharing resources such as computing files printers and scanners using either wired or wireless connections networks can essentially allow a computers operating system to access the resources of a remote computer to support the same functions as it could if those resources were connected directly to the local computer this includes everything from simple communication to using networked file systems or even sharing another computers graphics or sound hardware some network services allow the resources of a computer to be accessed transparently such as ssh which allows networked users direct access to a computers command line interface clientserver networking allows a program on a computer called a client to connect via a network to another computer called a server servers offer or host various services to other network computers and users these services are usually provided through ports or numbered access points beyond the servers ip address each port number is usually associated with a maximum of one running program which is responsible for handling requests to that port a daemon being a user program can in turn access the local hardware resources of that computer by passing requests to the operating system kernel many operating systems support one or more vendorspecific or open networking protocols as well for example sna on ibm systems decnet on systems from digital equipment corporation and microsoftspecific protocols smb on windows specific protocols for specific tasks may also be supported such as nfs for file access protocols like esound or esd can be easily extended over the network to provide sound from local applications on a remote systems sound hardware security computer security a computer being secure depends on a number of technologies working properly a modern operating system provides access to a number of resources which are available to software running on the system and to external devices like networks via the kernel the operating system must be capable of distinguishing between requests which should be allowed to be processed and others which should not be processed while some systems may simply distinguish between privileged and nonprivileged systems commonly have a form of requester identity such as a user name to establish identity there may be a process of authentication often a username must be quoted and each username may have a password other methods of authentication such as magnetic cards or biometric data might be used instead in some cases especially connections from the network resources may be accessed with no authentication at all such as reading files over a network share also covered by the concept of requester identity is authorization the particular services and resources accessible by the requester once logged into a system are tied to either the requesters user account or to the variously configured groups of users to which the requester belongs in addition to the allow or disallow model of security a system with a high level of security also offers auditing options these would allow tracking of requests for access to resources such as who has been reading this file internal security or security from an already running program is only possible if all possibly harmful requests must be carried out through interrupts to the operating system kernel if programs can directly access hardware and resources they cannot be secured external security involves a request from outside the computer such as a login at a connected console or some kind of network connection external requests are often passed through device drivers to the operating systems kernel where they can be passed onto applications or carried out directly security of operating systems has long been a concern because of highly sensitive data held on computers both of a commercial and military nature the united states government department of defense dod created the trusted computer system evaluation criteria tcsec which is a standard that sets basic requirements for assessing the effectiveness of security this became of vital importance to operating system makers because the tcsec was used to evaluate classify and select trusted operating systems being considered for the processing storage and retrieval of sensitive or classified information network services include offerings such as file sharing print services email web sites and file transfer protocols ftp most of which can have compromised security at the front line of security are hardware devices known as firewalls or intrusion detectionprevention systems at the operating system level there are a number of software firewalls available as well as intrusion detectionprevention systems most modern operating systems include a software firewall which is enabled by default a software firewall can be configured to allow or deny network traffic to or from a service or application running on the operating system therefore one can install and be running an insecure service such as telnet or ftp and not have to be threatened by a security breach because the firewall would deny all traffic trying to connect to the service on that port an alternative strategy and the only sandbox strategy available in systems that do not meet the popek and goldberg virtualization requirements is where the operating system is not running user programs as native code but instead either emulates a processor or provides a host for a pcode based system such as java internal security is especially relevant for multiuser systems it allows each user of the system to have private files that the other users cannot tamper with or read internal security is also vital if auditing is to be of any use since a program can potentially bypass the operating system inclusive of bypassing auditing user interface operating system user interface a screenshot of the bash command line each command is typed out after the prompt and then its output appears below working its way down the screen the current command prompt is at the bottom every computer that is to be operated by an individual requires a user interface the user interface is usually referred to as a shell and is essential if human interaction is to be supported the user interface views the directory structure and requests services from the operating system that will acquire data from input hardware devices such as a keyboard mouse or credit card reader and requests operating system services to display prompts status messages and such on output hardware devices such as a video monitor or printer the two most common forms of a user interface have historically been the commandline interface where computer commands are typed out linebyline and the graphical user interface where a visual environment most commonly a wimp is present graphical user interfaces a screenshot of the kde plasma 5 graphical user interface programs take the form of images on the screen and the files folders directories and applications take the form of icons and symbols a mouse is used to navigate the computer most of the modern computer systems support graphical user interfaces gui and often include them in some computer systems such as the original implementation of the classic mac os the gui is integrated into the kernel while technically a graphical user interface is not an operating system service incorporating support for one into the operating system kernel can allow the gui to be more responsive by reducing the number of context switches required for the gui to perform its output functions other operating systems are modular separating the graphics subsystem from the kernel and the operating system in the 1980s unix vms and many others had operating systems that were built this way linux and macos are also built this way modern releases of microsoft windows such as windows vista implement a graphics subsystem that is mostly in userspace however the graphics drawing routines of versions between windows nt 40 and windows server 2003 exist mostly in kernel space windows 9x had very little distinction between the interface and the kernel many computer operating systems allow the user to install or create any user interface they desire the xwindow system in conjunction with gnome or kde plasma 5 is a commonly found setup on most unix and unixlike bsd linux solaris systems a number of windows shell replacements have been released for microsoft windows which offer alternatives to the included windows shell but the shell itself cannot be separated from windows numerous unixbased guis have existed over time most derived from x11 competition among the various vendors of unix hp ibm sun led to much fragmentation though an effort to standardize in the 1990s to cose and cde failed for various reasons and were eventually eclipsed by the widespread adoption of gnome and k desktop environment prior to free softwarebased toolkits and desktop environments motif was the prevalent toolkitdesktop combination and was the basis upon which cde was developed graphical user interfaces evolve over time for example windows has modified its user interface almost every time a new major version of windows is released and the macos gui changed dramatically with the introduction of macosx in 1999 realtime operating systems realtime operating system a realtime operating system rtos is an operating system intended for applications with fixed deadlines realtime computing such applications include some small embedded systems automobile engine controllers industrial robots spacecraft industrial control and some largescale computing systems an early example of a largescale realtime operating system was transaction processing facility developed by american airlines and ibm for the sabre airline reservations system embedded systems that have fixed deadlines use a realtime operating system such as vxworks pikeos ecos qnx montavista linux and rtlinux windows ce is a realtime operating system that shares similar apis to desktop windows but shares none of desktop windows codebase symbian os also has an rtos kernel eka2 starting with version 80b some embedded systems use operating systems such as palm os bsd and linux although such operating systems do not support realtime computing operating system development as a hobby see also hobbyist operating system development operating system development is one of the most complicated activities in which a computing hobbyist may engage in some cases hobby development is in support of a homebrew computing device for example a simple singleboard computer powered by a 6502 microprocessor or development may be for an architecture already in widespread use operating system development may come from entirely new concepts or may commence by modeling an existing operating system in either case the hobbyist is hisher own developer or may interact with a small and sometimes unstructured group of individuals who have like interests examples of a hobby operating system include syllable diversity of operating systems and portability application software is generally written for use on a specific operating system and sometimes even for specific hardware when porting the application to run on another os the functionality required by that application may be implemented differently by that os the names of functions meaning of arguments etc requiring the application to be adapted changed or otherwise maintained unix was the first operating system not written in assembly language making it very portable to systems different from its native pdp11 this cost in supporting operating systems diversity can be avoided by instead writing applications against software platforms like java or qt these abstractions have already borne the cost of adaptation to specific operating systems and their system libraries another approach is for operating system vendors to adopt standards for example posix and os abstraction layers provide commonalities that reduce porting costs market share further information usage share of operating systems computer science portal information technology portal computer networking portal comparison of operating systems crash computing hypervisor interruptible operating system list of important publications in operating systems list of operating systems list of pioneers in computer science live cd glossary of operating systems terms microcontroller mobile device mobile operating system network operating system objectoriented operating system operating system projects system commander system image timeline of operating systems mwparseroutput refbeginfontsize90marginbottom05emmwparseroutput refbeginhangingindentsulliststyletypenonemarginleft0mwparseroutput refbeginhangingindentsullimwparseroutput refbeginhangingindentsdlddmarginleft0paddingleft32emtextindent32emliststylenonemwparseroutput refbegin100fontsize100 auslander marc a larkin david c scherr allan l 1981 the evolution of the mvs operating system pdf ibm j research development deitel harvey m deitel paul choffnes david operating systems pearsonprentice hall isbn9780130926418 bic lubomur f shaw alan c 2003 operating systems pearson prentice hall silberschatz avi galvin peter gagne greg 2008 operating systems concepts john wiley sons isbn0470128720 obrien ja marakas gm2011 management information systems 10e mcgrawhill irwin leva alberto maggio martina papadopoulos alessandro vittorio terraneo federico 2013 controlbased operating system design iet isbn9781849196093 arpacidusseau remzi arpacidusseau andrea 2015 operating systems three easy pieces look up operating system in wiktionary the free dictionary wikimedia commons has media related to screenshots of operating systems wikiversity has learning resources about operating systems operating systems at curlie multics history and the history of operating systems vteoperating systemsgeneral advocacy comparison forensic engineering history hobbyist development list timeline usage share kernelarchitectures exokernel hybrid microkernel monolithic rump kernel unikernel components device driver loadable kernel module microkernel user space process managementconcepts context switch interrupt ipc process process control block realtime thread timesharing schedulingalgorithms computer multitasking fixedpriority preemptive multilevel feedback queue preemptive roundrobin shortest job next memory management andresource protection bus error general protection fault memory protection paging protection ring segmentation fault virtual memory storage access andfile systems boot loader defragmentation device file file attribute inode journal partition virtual file system virtual tape library list amigaos android beos bsd chrome os cpm dos genode gnu haiku illumos includeos ios linux macintosh classic mac os macos minix morphos musicsp nemesis nextstep nos openvms orvyl os2 osv pick qnx reactos risc os rstse rsx11 rt11 solaris tops10tops20 tpf unix visi on vmcms vs9 webos windows xinu zos miscellaneous concepts api computer network hal live cd live usb os shell cli gui nui tui vui zui pxe vtesystems sciencesystems types anatomical art biological complex complex adaptive conceptual coupled humanenvironment database dynamical ecological economic energy formal holarchic information legal measurement metric multiagent nervous nonlinear operating physical planetary political sensory social star writing concepts doubling time leverage points limiting factor negative feedback positive feedback theoretical fields chaos theory complex systems control theory cybernetics earth system science living systems sociotechnical system systemics urban metabolism worldsystems theory analysis biology dynamics ecology engineering neuroscience pharmacology psychology theory thinking systems scientists alexander bogdanov russell l ackoff william ross ashby ruzena bajcsy bla h bnthy gregory bateson anthony stafford beer richard e bellman ludwig von bertalanffy margaret boden kenneth e boulding murray bowen kathleen carley mary cartwright c west churchman manfred clynes george dantzig edsger w dijkstra heinz von foerster stephanie forrest jay wright forrester barbara grosz charles a s hall lydia kavraki james j kay faina m kirillova george klir allenna leonard edward norton lorenz niklas luhmann humberto maturana margaret mead donella meadows mihajlo d mesarovic james grier miller radhika nagpal howard t odum talcott parsons ilya prigogine qian xuesen anatol rapoport peter senge claude shannon katia sycara francisco varela manuela m veloso kevin warwick norbert wiener jennifer wilby anthony wilden applications systems theory in anthropology systems theory in archaeology systems theory in political science organizations list principia cybernetica category portal commons vtemajor fields of computer sciencenote this template roughly follows the 2012 acm computing classification systemhardware printed circuit board peripheral integrated circuit very large scale integration systems on chip socs energy consumption green computing electronic design automation hardware acceleration computer systemsorganization computer architecture embedded system realtime computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notationsand tools programming paradigm programming language compiler domainspecific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team opensource model theory of computation model of computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis of algorithms algorithmic efficiency randomized algorithm computational geometry mathematicsof computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis informationsystems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security humancomputerinteraction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificialintelligence natural language processing knowledge representation and reasoning computer vision automated planning and scheduling search methodology control method philosophy of artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multitask learning crossvalidation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling appliedcomputing ecommerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video games word processing operations research educational technology document management book category portal wikiproject commons authority control bnf cb119333481 data gnd 40062168 lccn sh85094982 ndl 00865121 nkc ph115593 