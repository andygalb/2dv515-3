scaled agile framework software development core activities processes requirements design engineering construction testing debugging deployment maintenance paradigms and models agile cleanroom incremental prototyping spiral v model waterfall methodologies and frameworks asd devops dad dsdm fdd iid kanban lean sd less mdd msf psp rad rup safe scrum semat tsp up xp supporting disciplines configuration management documentation software quality assurance sqa project management user experience practices atdd bdd cco ci cd ddd pp standup tdd tools compiler debugger profiler gui designer modeling ide build automation release automation infrastructure as code testing standards and bodies of knowledge babok cmmi ieee standards iso 9001 isoiec standards pmbok swebok itil glossaries artificial intelligence computer science electrical and electronics engineering vte the scaled agile framework abbreviated as safe is a set of organization and workflow patterns intended to guide enterprises in scaling lean and agile practices safe promotes alignment collaboration and delivery across large numbers of agile teams it was developed by and for practitioners by leveraging three primary bodies of knowledge agile software development lean product development and systems thinking the primary reference for the scaled agile framework was originally the development of a big picture view of how work flowed from product management or other stakeholders through governance program and development teams out to customers while safe has been recognised as the most common approach to scaling agile practices challenges of scaling agile principles and practices coping with longer planning horizons development teams typically refine their backlog up to two to three iterations ahead but in larger organizations the product marketing team needs to plan further ahead for their commitments to market and discussions with customers keeping agile at abstract levels of responsibility while development teams have a number of frameworks that define how they should be agile there is very little that describes this for management safe delivers many of the same principles such as crossfunctional teams to the groups that handle the more abstract levels of responsibility and planning product and portfolio dealing with delegated authority in scrum the product owner is expected to assume responsibility for the full product lifecycle including the return on investment of development decisions as well as performance in market on largescale developments the organization needs a view across multiple team backlogs such as provided by a product manager synchronizing deliverables agile frameworks are designed to enable the development team to be autonomous and free to design how they work safe acknowledges that at the scale of many tens or hundreds of development teams it becomes increasingly chaotic for teams to fully selforganize allowing time for innovation and planning the safe planning cycle recommends including an additional iteration after a release so that teams can improve their practices and are ready for the next planning increment earlier editions of safe also designed this to be a hardening iteration that is to stabilize or harden the product before releasing it this was predicated on the complications of working with large integration environments where dependencies meant that you could not test everything until the very end safe was criticized for this as it represented an antiagile or waterfall element this is not included in recent editions of safe implementation underlying principles of safe according to its authors safe is based upon nine underlying concepts which are derived from existing lean and agile principles as well as observation take an economic view apply systems thinking assume variability preserve options build incrementally with fast integrated learning cycles base milestones on objective evaluation of working systems visualize and limit workinprogress reduce batch sizes and manage queue lengths apply cadence timing synchronize with crossdomain planning unlock the intrinsic motivation of knowledge workers decentralize decisionmaking the safe framework in safe version 45 there are four configurations essential portfolio large solution and full essential safe is the most basic configuration it describes the most critical elements needed and is intended to provide the majority of the frameworks benefits it includes the team and program level which it calls agile release trains or arts portfolio safe includes concerns for strategic direction investment funding and lean governance large solution safe allows for coordination and synchronization across multiple programs but without the portfolio considerations in earlier versions of safe this level was referred to as value stream full safe combines the other three levels certifications scaled agile provides certifications that cover different areas and knowledge levels scrum of scrums heusser matthew 17 june 2015 introducing the scaled agile framework cio pp12 contains a review of the pros and cons of the methodology and concludes it is a halfwayhouse to a fully agile system leffingwell dean 2011 lean requirements practices for teams programs and the enterprise addisonwesley professional isbn9780321635846 linders ben 15 january 2015 lean and agile leadership with the scaled agile framework safe infoq official website 