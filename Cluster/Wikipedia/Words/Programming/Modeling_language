modeling language a modeling language is any artificial language that can be used to express information or knowledge or systems in a structure that is defined by a consistent set of rules the rules are used for interpretation of the meaning of components in the structure overview a modeling language can be graphical or textual graphical modeling languages use a diagram technique with named symbols that represent concepts and lines that connect the symbols and represent relationships and various other graphical notation to represent constraints textual modeling languages may use standardized keywords accompanied by parameters or natural language terms and phrases to make computerinterpretable expressions an example of a graphical modeling language and a corresponding textual modeling language is express not all modeling languages are executable and for those that are the use of them doesnt necessarily mean that programmers are no longer required on the contrary executable modeling languages are intended to amplify the productivity of skilled programmers so that they can address more challenging problems such as parallel computing and distributed systems a large number of modeling languages appear in the literature type of modeling languages graphical types example of graphical modeling languages in the field of computer science project management and systems engineering behavior trees are a formal graphical modeling language used primarily in systems and software engineering commonly used to unambiguously represent the hundreds or even thousands of natural language requirements that are typically used to express the stakeholder needs for a largescale softwareintegrated system business process modeling notation bpmn and the xml form bpml is an example of a process modeling language ck theory consists of a modeling language for design processes drakon is a generalpurpose algorithmic modeling language for specifying softwareintensive systems a schematic representation of an algorithm or a stepwise process and a family of programming languages express and expressg iso 1030311 is an international standard generalpurpose data modeling language extended enterprise modeling language eeml is commonly used for business process modeling across a number of layers flowchart is a schematic representation of an algorithm or a stepwise process fundamental modeling concepts fmc modeling language for softwareintensive systems idef is a family of modeling languages which include idef0 for functional modeling idef1x for information modeling idef3 for business process modeling idef4 for objectoriented design and idef5 for modeling ontologies jackson structured programming jsp is a method for structured programming based on correspondences between data stream structure and program structure lepus3 is an objectoriented visual design description language and a formal specification language that is suitable primarily for modeling large objectoriented java c c programs and design patterns objectrole modeling orm in the field of software engineering is a method for conceptual modeling and can be used as a tool for information and rules analysis petri nets use variations on exactly one diagramming technique and topology namely the bipartite graph the simplicity of its basic user interface easily enabled extensive tool support over the years particularly in the areas of model checking graphically oriented simulation and software verification southbeach notation is a visual modeling language used to describe situations in terms of agents that are considered useful or harmful from the modelers perspective the notation shows how the agents interact with each other and whether this interaction improves or worsens the situation specification and description language sdl is a specification language targeted at the unambiguous specification and description of the behavior of reactive and distributed systems sysml is a domainspecific modeling language for systems engineering that is defined as a uml profile customization unified modeling language uml is a generalpurpose modeling language that is an industry standard for specifying softwareintensive systems uml 20 the current version supports thirteen different diagram techniques and has widespread tool support serviceoriented modeling framework somf is a holistic language for designing enterprise and application level architecture models in the space of enterprise architecture virtualization serviceoriented architecture soa cloud computing and more architecture description language adl is a language used to describe and represent the systems architecture of a system aadl aadl is a modeling language that supports early and repeated analyses of a systems architecture with respect to performancecritical properties through an exetendable notation a tool framework and precisely defined semantics examples of graphical modeling languages in other fields of science eastadl is a domainspecific modeling language dedicated to automotive system design energy systems language esl a language that aims to model ecological energetics global economics textual types information models can also be expressed in formalized natural languages such as gellish gellish has natural language variants such as gellish formal english and gellish formal dutch gellish formeel nederlands etc gellish formal english is an information representation language or semantic modeling language that is defined in the gellish english dictionarytaxonomy which has the form of a taxonomyontology similarly for dutch gellish formal english is not only suitable to express knowledge requirements and dictionaries taxonomies and ontologies but also information about individual things all that information is expressed in one language and therefore it can all be integrated independent of the question whether it is stored in central or distributed or in federated databases information models in gellish formal english consists of collections of gellish formal english expressions that use natural language terms and formalized phrases for example a geographic information model might consist of a number of gellish formal english expressions such as the eiffel tower is located in paris paris is classified as a city whereas information requirements and knowledge can be expressed for example as follows tower shall be located in a geographical area city is a kind of geographical area such gellish formal english expressions use names of concepts such as city and phrases that represent relation types such as is located in and is classified as a that should be selected from the gellish english dictionarytaxonomy or of your own domain dictionary the gellish english dictionarytaxonomy enables the creation of semantically rich information models because the dictionary contains more than 600 standard relation types and contains definitions of more than 40000 concepts an information model in gellish can express facts or make statements queries and answers more specific types in the field of computer science recently more specific types of modeling languages have emerged algebraic algebraic modeling languages aml are highlevel programming languages for describing and solving high complexity problems for large scale mathematical computation ie large scale optimization type problems one particular advantage of amls like aimms ampl gams lpl mosel mpl opl and optimj is the similarity of its syntax to the mathematical notation of optimization problems this allows for a very concise and readable definition of problems in the domain of optimization which is supported by certain language elements like sets indices algebraic expressions powerful sparse index and data handling variables constraints with arbitrary names the algebraic formulation of a model does not contain any hints how to process it behavioral behavioral languages are designed to describe the observable behavior of complex systems consisting of components that execute concurrently these languages focus on the description of key concepts such as concurrency nondeterminism synchronization and communication the semantic foundations of behavioral languages are process calculus or process algebra disciplinespecific a disciplinespecific modeling dspm language is focused on deliverables affiliated with a specific software development life cycle stage therefore such language offers a distinct vocabulary syntax and notation for each stage such as discovery analysis design architecture contraction etc for example for the analysis phase of a project the modeler employs specific analysis notation to deliver an analysis proposition diagram during the design phase however logical design notation is used to depict relationship between software entities in addition the disciplinespecific modeling language best practices does not preclude practitioners from combining the various notations in a single diagram domainspecific domainspecific modeling dsm is a software engineering methodology for designing and developing systems most often it systems such as computer software it involves systematic use of a graphical domainspecific language dsl to represent the various facets of a system dsm languages tend to support higherlevel abstractions than generalpurpose modeling languages so they require less effort and fewer lowlevel details to specify a given system frameworkspecific a frameworkspecific modeling language fsml is a kind of domainspecific modeling language which is designed for an objectoriented application framework fsmls define frameworkprovided abstractions as fsml concepts and decompose the abstractions into features the features represent implementation steps or choices a fsml concept can be configured by selecting features and providing values for features such a concept configuration represents how the concept should be implemented in the code in other words concept configuration describes how the framework should be completed in order to create the implementation of the concept information and knowledge modelling linked data and ontology engineering require host languages to represent entities and the relations between them constraints between the properties of entities and relations and metadata attributes jsonld and rdf are two major and semantically almost equivalent languages in this context primarily because they support statement reification and contextualisation which are essential properties to support the higherorder logic needed to reason about models model transformation is a common example of such reasoning objectoriented object modeling language are modeling languages based on a standardized set of symbols and ways of arranging them to model part of an object oriented software design or system design some organizations use them extensively in combination with a software development methodology to progress from initial specification to an implementation plan and to communicate that plan to an entire team of developers and stakeholders because a modeling language is visual and at a higherlevel of abstraction than code using models encourages the generation of a shared vision that may prevent problems of differing interpretation later in development often software modeling tools are used to construct these models which may then be capable of automatic translation to code virtual reality virtual reality modeling language vrml before 1995 known as the virtual reality markup language is a standard file format for representing 3dimensional 3d interactive vector graphics designed particularly with the world wide web in mind others architecture description language face modeling language generative modelling language java modeling language promela rebeca modeling language service modeling language web services modeling language x3d applications various kinds of modeling languages are applied in different disciplines including computer science information management business process modeling software engineering and systems engineering modeling languages can be used to specify system requirements structures and behaviors modeling languages are intended to be used to precisely specify systems so that stakeholders eg customers operators analysts designers can better understand the system being modeled the more mature modeling languages are precise consistent and executable informal diagramming techniques applied with drawing tools are expected to produce useful pictorial representations of system requirements structures and behaviors but not much else executable modeling languages applied with proper tool support however are expected to automate system verification and validation simulation and code generation from the same representations quality a review of modelling languages is essential to be able to assign which languages are appropriate for different modelling settings in the term settings we include stakeholders domain and the knowledge connected assessing the language quality is a means that aims to achieve better models framework for evaluation here language quality is stated in accordance with the sequal framework for quality of models developed by krogstie sindre and lindland 2003 since this is a framework that connects the language quality to a framework for general model quality five areas are used in this framework to describe language quality and these are supposed to express both the conceptual as well as the visual notation of the language we will not go into a thoroughly explanation of the underlying quality framework of models but concentrate on the areas used to explain the language quality framework domain appropriateness the framework states the ability to represent the domain as domain appropriateness the statement appropriateness can be a bit vague but in this particular context it means able to express you should ideally only be able to express things that are in the domain but be powerful enough to include everything that is in the domain this requirement might seem a bit strict but the aim is to get a visually expressed model which includes everything relevant to the domain and excludes everything not appropriate for the domain to achieve this the language has to have a good distinction of which notations and syntaxes that are advantageous to present participant appropriateness to evaluate the participant appropriateness we try to identify how well the language expresses the knowledge held by the stakeholders this involves challenges since a stakeholders knowledge is subjective the knowledge of the stakeholder is both tacit and explicit both types of knowledge are of dynamic character in this framework only the explicit type of knowledge is taken into account the language should to a large extent express all the explicit knowledge of the stakeholders relevant to the domain modeller appropriateness last paragraph stated that knowledge of the stakeholders should be presented in a good way in addition it is imperative that the language should be able to express all possible explicit knowledge of the stakeholders no knowledge should be left unexpressed due to lacks in the language comprehensibility appropriateness comprehensibility appropriateness makes sure that the social actors understand the model due to a consistent use of the language to achieve this the framework includes a set of criteria the general importance that these express is that the language should be flexible easy to organize and easy to distinguish different parts of the language internally as well as from other languages in addition to this the goal should be as simple as possible and that each symbol in the language has a unique representation tool appropriateness to ensure that the domain actually modelled is usable for analyzing and further processing the language has to ensure that it is possible to reason in an automatic way to achieve this it has to include formal syntax and semantics another advantage by formalizing is the ability to discover errors in an early stage it is not always that the language best fitted for the technical actors is the same as for the social actors organizational appropriateness the language used is appropriate for the organizational context eg that the language is standardized within the organization or that it is supported by tools that are chosen as standard in the organization analogical models anthropomorphism metamodeling modelbased testing mbt modeldriven architecture modeldriven engineering mde modeling perspective ontology language scientific modelling serviceoriented modeling visual modeling visual programming language wikimedia commons has media related to modeling languages fundamental modeling concepts software modeling languages portal bip incremental componentbased construction of realtime systems gellish formal english john krogstie 2003 evaluating uml using a generic quality framework sintef telecom andinformatics and idi ntnu norway krogstie and slvsberg 2003 information systems engineering conceptual modeling in a quality perspective institute of computer and information sciences anna gunhild nysetvold and john krogstie 2005 assessing business processing modeling languages using a generic quality framework institute of computer and information sciences vtesoftware engineeringfields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc modelsdevelopmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml softwareengineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons vtetypes of omputer languagetypes architecture description configuration data exchange hardware description knowledge representation markup modeling programming language query shading specification stylesheet transformation see also categorylists of computer languages categorylists of programming languages list of programming languages by type 