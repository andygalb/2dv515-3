object model in computing object model has two related but distinct meanings the properties of objects in general in a specific computer programming language technology notation or methodology that uses them examples are the object models of java the component object model com or objectmodeling technique omt such object models are usually defined using concepts such as class generic function message inheritance polymorphism and encapsulation there is an extensive literature on formalized object models as a subset of the formal semantics of programming languages a collection of objects or classes through which a program can examine and manipulate some specific parts of its world in other words the objectoriented interface to some service or system such an interface is said to be the object model of the represented service or system for example the document object model dom is an object model for controlling an astronomical telescope an object model consists of the following important features object reference objects can be accessed via object references to invoke a method in an object the object reference and method name are given together with any arguments interfaces an interface provides a definition of the signature of a set of methods without specifying their implementation an object will provide a particular interface if its class contains code that implement the method of that interface an interface also defines types that can be used to declare the type of variables or parameters and return values of methods actions an action in objectoriented programming oop is initiated by an object invoking a method in another object an invocation can include additional information needed to carry out the method the receiver executes the appropriate method and then returns control to the invoking object sometimes supplying a result exceptions programs can encounter various errors and unexpected conditions of varying seriousness during the execution of the method many different problems may be discovered exceptions provide a clean way to deal with error conditions without complicating the code a block of code may be defined to throw an exception whenever particular unexpected conditions or errors arise this means that control passes to another block of code that catches the exception objectoriented programming objectoriented analysis and design object database object management group domaindriven design eigenclass model literature weisfeld matt 2003 the objectoriented thought process 2nd edition sams isbn0672326116mwparseroutput citecitationfontstyleinheritmwparseroutput qquotesmwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665lockgreensvg9pxlockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1locklimited amwparseroutput cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6lockgrayalt2svg9pxlockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaalockredalt2svg9pxlockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em fowler martin 1996 analysis patterns reusable object models addisonwesley isbn0201895420 k fisher f honsell jc mitchell 1994 a lambda calculus of objects and method specialization pdf nordic journal of computing 1 337 marini joe 2002 document object model processing structured documents osbornemcgrayhill isbn0072224363 lippman stanley 1996 inside the c object model addisonwesley professional isbn0201834545 document object model dom the official w3c definition of the dom the java object model the ruby object model data structure in detail object membership the core structure of objectoriented programming object model features matrix a representative sample of the design space of object models sense 1 ascom standards web site vtesoftware engineeringfields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc modelsdevelopmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml softwareengineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons 